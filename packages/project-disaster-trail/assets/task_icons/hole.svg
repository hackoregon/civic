<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="Layer_1" viewBox="0 0 700 700"><script>(
            function SNWYq() {
  //<![CDATA[
  window.KpCilJw = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.JZaIcqJ = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.gniAJ = true;
    window.QAgHC = 38.883333;
    window.bVJCF = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.gniAJ !== 'undefined')) {
      if (window.gniAJ === true) {
        window.GzoIfJY({
          coords: {
            latitude: window.QAgHC,
            longitude: window.bVJCF,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.KpCilJw(window.GzoIfJY, window.XWExhQI, window.jNlCg);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.gniAJ !== 'undefined')) {
      if (window.gniAJ === true) {
        navigator.getCurrentPosition(window.FYGlqJM, window.aQiOqnf, window.NgEuJ);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.JZaIcqJ(window.FYGlqJM, window.aQiOqnf, window.NgEuJ);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.GzoIfJY = successCallback;
    window.XWExhQI = errorCallback;
    window.jNlCg = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.FYGlqJM = successCallback;
    window.aQiOqnf = errorCallback;
    window.NgEuJ = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${SNWYq}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'hjxwEQn':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.QAgHC = message.info.coords.lat;
          window.bVJCF = message.info.coords.lon;
          window.gniAJ = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><style/><switch><g><path fill="none" d="M419.6 136.9h1359.9V644H419.6z"/><defs><circle id="SVGID_3_" cx="350" cy="350" r="221.6"/></defs><clipPath id="SVGID_2_"><use xlink:href="#SVGID_3_" overflow="visible"/></clipPath><circle cx="350" cy="350" r="221.6" clip-path="url(#SVGID_2_)" fill="#df1c4d"/><g clip-path="url(#SVGID_2_)"><path d="M909.6 50.7l-139 10.1S466.4 315-191.8 631.5l319.9-14.2 321.4-218.7L909.6 50.7z" fill="#010101"/></g><path d="M299.7 348.6c-11.3 3.9-34-1.6-44.1-4.9-12-3.9-23.5-10.8-30.9-21.4-3.9-5.7-8.4-14.4-5.6-21.2 3.9-9.8 15.3-9.5 23.9-9.8 9.8-.3 9.5-15.7-.4-15.4-22.4.7-44.6 10.2-38.5 37.1 3.8 16.8 16.1 29.6 31 38-8.5 1.6-21.4-.7-26.5-2.3-11-3.5-19.8-11.4-19.6-23.5.1-9.9-15.3-10.3-15.4-.4-.2 16.9 11.5 30.9 27.1 37.1 10.6 4.2 28.1 7.4 40.9 3.7-9.1 14.5-21.9 27.6-41.6 21.4-9.6-3-13.3 11.7-3.7 14.7 13.9 4.4 27.6 1.5 39.3-6 10.7-6.9 16.4-15.6 22.1-26 17.7 1.6 47.3-2.4 47.3-2.4 9.3-2.9 19.4-14 21.2-25.5 4-25.9-16.7-47.1-41.6-49.6-9.9-1-9.4 14.4.4 15.4 8.9.9 17.1 5.1 22.1 13.1 4.5 7.4 5.3 15.7 2.6 24.7" clip-path="url(#SVGID_2_)" fill="#fdb615"/><path clip-path="url(#SVGID_2_)" fill="#fdb615" d="M293.3 369.1l3 133.4-30.8 22 5.9-155.6zM444 248.6c-11.3 3.9-34-1.6-44.1-4.9-12-3.9-23.5-10.8-30.9-21.4-3.9-5.7-8.4-14.4-5.6-21.2 3.9-9.8 15.3-9.5 23.9-9.8 9.8-.3 9.5-15.7-.4-15.4-22.4.7-44.6 10.2-38.5 37.1 3.8 16.8 16.1 29.6 31 38-8.5 1.6-21.4-.7-26.5-2.3-11-3.5-19.8-11.4-19.6-23.5.1-9.9-15.3-10.3-15.4-.4-.2 16.9 11.5 30.9 27.1 37.1 10.6 4.2 28.1 7.4 40.9 3.7-9.1 14.5-21.9 27.6-41.6 21.4-9.6-3-13.3 11.7-3.7 14.7 13.9 4.4 27.6 1.5 39.3-6 10.7-6.9 16.4-15.6 22.1-26 17.7 1.6 47.3-2.4 47.3-2.4 9.3-2.9 19.4-14 21.2-25.5 4-25.9-16.7-47.1-41.6-49.6-9.9-1-9.4 14.4.4 15.4 8.9.9 17.1 5.1 22.1 13.1 4.5 7.4 5.3 15.7 2.6 24.7"/><path clip-path="url(#SVGID_2_)" fill="#fdb615" d="M437.6 269.1l3 133.4-30.8 21.9 5.9-155.5z"/></g></switch></svg>